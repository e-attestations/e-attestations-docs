{
	"info": {
		"_postman_id": "eb3b3f61-ebcc-48cb-bea5-47885fe170b5",
		"name": "__eAttestations-API-REST-multi-version",
		"description": "# API REST/Json eAttestations (PREVIEW)\n\nL'API REST/Json est utilisée pour **interfacer** un système d'information '**client**' à la plate-forme d'eAttestations suivant le protocole HTTP.\n\nREST (Representational State Transfer) ou RESTful est un style d'architecture permettant de construire des applications (Web, Intranet, Web Service) en exploitant des points terminateurs (des endpoints urls) et référençant des ressources à exploiter suivant les verbes du protocole HTTP (GET, POST, PUT, DELETE etc...).\n\nLes applications 'clientes' utilisant l'API REST eAttestations enrichisent le Système d'Information du client avec le catalogue des données et services d'eAttestations de façon sécurisée et très souple.\n\nL'API peut également être utilisée par les intégrateurs, éditeurs logiciels, des solutions SAAS ou des connecteurs.\n\n<aside class=\"info\">\nl'API REST/Json eAttestations est actuellement en **PREVIEW** et n'est proposée qu'aux partenaires et clients du programme d'adoption de cette nouvelle offre de service.\nContactez eAttestations pour plus d'information à <a href=\"mailto:contact@e-attestations.com\">contact@e-attestations.com</a>\n</aside>\n\n## Objectifs de cette documentation\n\n * Donner des éléments de réponses sur la sécurité des environnements mis à dispotision\n * Expliciter le support\n * Décrire chaque ressources et chaque endpoint, les modèles associés et les erreurs liées\n * Proposer des snippets de codes pour faciliter l'intégration de l'API\n\n## Documentation OpenAPI V3\n\n<aside class=\"info\">\nDurant toute la vesion PREVIEW (au moins) de cette API la documentation OpenAPI v3 (Swagger) **est accessible librement**\n</aside>\n\nUne documentation Open API v3 est aussi disponible ici :\n\n[https://ea-api-edge.test-uservice.dev-e-attestations.com/doc/swagger.yml](https://ea-api-edge.test-uservice.dev-e-attestations.com/doc/swagger.yml)\n\n\n\nUne documentation Open API v2 est aussi disponible ici :\n\n[https://ea-api-edge.test-uservice.dev-e-attestations.com/swagger-ui.html](https://ea-api-edge.test-uservice.dev-e-attestations.com/swagger-ui.html)\n\nLa documentation Swagger/OpenAPI v2 au format JSON est disponible ici **/v2/api-docs** :\n\n[https://ea-api-edge.test-uservice.dev-e-attestations.com/v2/api-docs](https://ea-api-edge.test-uservice.dev-e-attestations.com/v2/api-docs)\n\n\n## Mise en place\n\nPour souscrire à l'un ou l'autre des environnements vous devez tout d'abord en **émettre la demande auprès de votre gestionnaire** de compte eAttestations habituel.\n\nNous vous conseillons de bien discuter de la configuration de votre compte concernant les documents de compliance avec votre gestionnaire de compte afin de parfaitement comprendre votre cas d'usage et vous conseiller au mieux.\n\n**Attention** : L'usage de l'API n'est pas multicomptes.\n\nVotre gestionnaire de compte informera l'équipe technique pour la création d'une organisation liée à votre compte et un ou plusieurs contacts techniques (emails) seront alors invités au **Tech'Desk eAttestations**.\n\n## Le support Tech'Desk eAttestations\n\nC'est un système de ticketing et de support **TECHNIQUE** dédié au API et WebServices dans lequel vous pouvez poster questions et demandes.\n\nAprès avoir reçu un email d'invitation créez votre user et mot de passe en toute autonomie pour accéder aux services et documentation de cette plateforme de support.\n\nLa plateforme Tech'Desk : [https://jira-e-attestations.atlassian.net/servicedesk/customer/portals](https://jira-e-attestations.atlassian.net/servicedesk/customer/portals).\n\nCette plateforme sécurisée vous permet aussi de partager dans votre organisation les tickets de support.\n\n**Note** : les users et mots de passe de connexion ne sont fournis que dans le Tech'Desk.\n\n<a href=\"https://jira-e-attestations.atlassian.net/servicedesk/customer/portals\" title=\"Accédez au Tech'Desk\" target=\"_blank\">\n<img alt=\"Home page du Tech'Desk eAttestations\" src=\"./images/TechDesk_Home.png\" width=\"480\" />\n</a>\n\n## Evironnements\n\neAttestations met à disposition deux environnements : \n\n- **TEST** :\nL'ouverture d'un accès de TEST de type API REST connecté à un compte client de TEST vous permettra, de façon pleinement sécurisée, d'accéder à une infrastructure partagée et identique à celle de production. \n\n<aside class=\"warning\">\n**ATTENTION**</span> : dans l'environnement de TEST et afin d'éviter que vos tests n'interfèrent pas avec votre activité de production les envois d'emails sont inhibés (pas d'invitation des tiers ou d'envoi de rapport).\n</aside>\n\n<br/>\n\n- **PRODUCTION** :\nL'ouverture d'un accès de PROD de type API REST connecté à un compte client de PROD vous permet de l'utiliser pour votre compte.\n\nEnvironnement | URL\n--------------|-------\nTEST | [https://rs-test.e-attestations.com/api/v1/](https://rs-test.e-attestations.com/api/v1/)\nPRODUCTION | [https://rs.e-attestations.com/api/v1/](https://rs.e-attestations.com/api/v1/)\n\n# Format des réponses\n\n```json\n{\n  content: [\n    {\n      \"companyIdType\": \"string\",\n      \"companyIdValue\": \"string\",\n      \"thirdpartyCode\": \"string\"\n    }],\n  messages: {\n    warning: [\n      {\n        code: \"W001\",\n        message: \"La clé d'API expire dans 3 jours\"\n      }\n    ]\n  }\n}\n```\n\nLes réponses sont au format JSON composées des attributs (optionnels) suivants:\n\n* **content**, contenant le résultat de l'opération, en cas de succès.\n* **page**, le numéro de la page. **Renvoyé en cas de contenu paginé.**\n* **size**, taille de la page. **Renvoyé en cas de contenu paginé.**\n* **totalElements**, le nombre total d'éléments. **Renvoyé en cas de contenu paginé.**\n* **messages** contenant **d'éventuels messages** d'information, d'avertissement ou d'erreur.\n\n\nPour plus de détails lisez la section <a href=\"#schemas\">Schemas</a> et plus spécifiquement sur le format des <a href=\"#tocSmessages\">Messages</a>.\n\n## Exemple d'erreur (protocolaire)\n\n```json\n{\n    \"timestamp\": \"2019-02-05T09:06:15.245+0000\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/account/1234567/876543\"\n}\n```\n\n<aside class=\"warning\">\nNous avons développé un contrat d'interface (présenté ci dessus) qui se veut le plus pratique pour le développeur.\nIl est toute fois important de noter que durant la PREVIEW certains messages pourront ne pas encore présenter le même format.\nAuquel cas un format 'standard' de réponse d'erreur 'protocolaire' est utilisé.\nNous poursuivons les développements pour permettre la généralisation du contrat d'interface dans tous les cas d'erreur.\n</aside>\n\n\n## Encoding\n\nL'API REST doit être utilisée et consommée en UTF8.\n\n\n# Sécurité\n\n### OpenID Connect (OIDC)\n\nL'API REST eAttestations utilise **[OpenID Connect (OIDC)](https://openid.net/connect/)** pour identifier et authentifier les clients. Toute requête vers l'API doit obligatoirement inclure un Token [ (Json Web Token)](https://jwt.io/) valide.\n\nCe dernier doit être envoyé dans le header 'Authorization' (cf. l'exemple qui suit).\n\nPlus d'informations sur OpenID Connect et JWT sur :\n\n* [https://openid.net/connect/](https://openid.net/connect/)\n* [https://jwt.io/](https://jwt.io/)\n\n#### Récupérer le token JWT\n\n\n```shell\ncurl -X POST \\\n    https://auth.e-attestations.com/auth/token \\\n    -H 'Content-Type: application/x-www-form-urlencoded' \\\n    -d 'client_id=ea-api' \\\n    -d 'grant_type=password' \\\n    -d 'username=<apiuser>' \\\n    -d 'password=<apipassword>'\n```  \n\n```json\n{\n    \"access_token\":\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI0V19kYjFzUmpISTc3SGc0SkRWclVLQXpaQlBnZjlpY2ZDcU5vQUxOZWhNIn0.eyJqdGkiOiI0ZGExNjE1NC04ZjQyLTQyNzQtOTM4Ny0wOGJiODk4MmE3MTMiLCJleHAiOjE1NTQyOTgyNTgsIm5iZiI6MCwiaWF0IjoxNTU0Mjk2NDU4LCJpc3MiOiJodHRwczovL2F1dGguZGV2LWUtYXR0ZXN0YXRpb25zLmNvbS9hdXRoL3JlYWxtcy9lYXRfcmVhbG0iLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiYzg0OGFiYmItYTIyOC00MmMxLWFkNzAtYjJiMDEwYzhlODUxIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZWEtYXBpLWVkZ2UiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiI5YmEzYWFmNC0zYjU0LTQ5ZTctOTJiMC0xOTkwMGQxNWE5ZWIiLCJhY3IiOqsdqsdsdqsdqsdsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiQURNSU4iLCJVU0VSIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwiYWNjb3VudF9pZHMiOiIxMTg0NjYiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IlZpbmNlbnQgREFHT1VSWSIsInByZWZlcnJlZF91c2VybmFtZSI6InYuZGFnb3VyeUBlLWF0dGVzdGF0aW9ucy5jb20iLCJnaXZlbl9uYW1lIjoiVmluY2VudCIsImZhbWlseV9uYW1lIjoiREFHT1VSWSIsImVtYWlsIjoidi5kYWdvdXJ5QGUtYXR0ZXN0YXRpb25zLmNvbSJ9.c-smWPif1YT9dKicAAJSsNwI-xCtZWV-r6QqYFSvkgHhPsgHc0gDLenMfQBgYPN_0jKW7FBJmse7fgAB4dnrqCOGM33cQ2wfYi37aXlDqz8l_aFamkEslGnKxw9QDOYSMQz52dD34yXQZGl0OxXE01PAquqKUEtnVG0Rz2SAB0qU5tAqsdqsdsd-rKpCYwKb_6-WwH2xN1B9lgLahZexprPvH25OXUcPJ0GSXCASpnSMxR3ziiv9AtX3R48rT4T_LTLlrKblT_cdZS-Z_uGgzP0pxT9yfqxSYn05haRLTL_grBDdt31ZIDnxiMFEg2UdDB1wzlJBOuOEmw\",\n    \"expires_in\": 1800,\n    \"refresh_expires_in\": 1800,\n    \"refresh_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJiYTcxZWMyOC0wOTVkLTRkOWQtOWQwYi1jYjAyMTJmNjczYjcifQ.eyJqdGkiOiI2YmQ2ZThkYS1kOWNjLTRhNzgtODg1NS1iMzMwZWU0NDg1NjEiLCJleHAiOjE1NTQyOTgyNTgsIm5iZiI6MCwiaWF0IjoxNTU0Mjk2NDUqsdqsdqsdqsdOiJodHRwczovL2F1dGguZGV2LWUtYXR0ZXN0YXRpb25zLmNvbS9hdXRoL3JlYWxtcy9lYXRfcmVhbG0iLCJhdWQiOiJodHRwczovL2F1dGguZGV2LWUtYXR0ZXN0YXRpb25zLmNvbS9hdXRoL3JlYWxtcy9lYXRfcmVhbG0iLCJzdWIiOiJjODQ4YWJiYi1hMjI4LTQyYzEtYWQ3MC1iMmIwMTBjOGU4NTEiLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoiZWEtYXBpLWVkZ2UiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiI5YmqsdqsdsqsdQ5ZTctOTJiMC0xOTkwMGQxNWE5ZWIiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsIkFETUlOIiwiVVNFUiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCJ9.fpVVA-G-Fj9MDOB5ZneAGVRhkLk26hgCeZ4dqh3rEHs\",\n    \"token_type\": \"bearer\",\n    \"not-before-policy\": 1550670103,\n    \"session_state\": \"9ba3aaf4-3b54-49e7-92b0-19900d15a9eb\",\n    \"scope\": \"profile email\"\n}\n```\n\n```shell\ncurl -X GET \\\n  https://api.e-attestations.com/v4/account/97862/dossiers \\\n    -H \"Authorization: Bearer <JWT_TOKEN>\"\n```\n\nLe Json Web TOKEN (JWT) est à utiliser dans tous les requetes vers l'API suivantes est la valeur du token étant renvoyé dans la propriété **\"access_token\"**.\n\n<aside class=\"warning\">\nLa durée de validité du tocken est de quelques minutes. Vous devez vous assurer de la durée de validité de votre TOKEN grace à **\"expires_in\"** qui vous indique en nombre de secondes avant qu'il n'expire au moment de son obtention (par exemple 1800 secondes correspondant à 30').\n</aside>\n\n<aside class=\"info\">\nRappel : vos identifiants sont délivrés à votre demande **UNIQUEMENT** via un ticket envoyé au <a href=\"#le-support-tech-39-desk-eattestations\">Tech'Desk</a> et après activation de votre souscription par votre gestionnaire de comptes.\n</aside>\n\n### Sécurité renforcée par Trust IP\n\nChaque requête est authentifiée et un mécanisme de filtrage de confiance par adresse IP (whitelist) permet de garantir la légitimité du système client vis à vis de notre infrastructure sécurité et réseau. \nAinsi, il faudra toujours **préciser les adresses IP de vos infrastructures clientes** (cf. plus loin).\n\nLes échanges sont sécurisés par un chiffrement SSL/TLS. Le certificat public 'e-attestations.com' supporte les protocoles TLS depuis le 1.0, 1.1 jusqu'au 1.2 pour s'adpater à la diversité de configuration de nos clients.\n\n<aside class=\"warning\">\neAttestations considère comme sûr le protocole TLS 1.2 uniquement.\n</aside>\n\nAinsi, lors de la souscription au service ou via le Tech'Desk vous devez communiquer les adresses IP des serveurs 'client' et qui consommeront l'API REST JSON. \n\nSi vous avez un ou plusieurs serveurs clients, il faut que chaque adresse IP soit communiquée pour qu'elle soit ajoutée à la liste des IP de confiance (Trust IP) d'eAttestations.\n\nL'adresse IP doit être fournie par serveur et sous la forme d'un CIDR.\n\nPar exemple : `34.56.78.90/32`\nle `/32` désigne la masque pour une adresse IP unique.\n\n# Ressources\n\n## Compte ('account')\n\nLe compte eAttestations donneur d'ordres et souscripteur au service.\n\nChaque compte dispose d'un identifiant de **compte unique**. Par construction, toutes les requêtes doivent obligatoirement inclure l'identifiant du client dans l'URL d'appel à l'exception du point terminateur **/account** qui vous donnes des informations sur votre l'identifiant du compte.\n\nLes urls sont ainsi toutes prefixées par **/account/{account_id}/****\n\nL'identifiant de compte (de type string) est renvoyé dans le **payload** du token JWT, comme illustré ci-dessous:\n\n<div class=\"center-column\"></div>\n```json\n{\n  \"name\": \".....\",\n  \"account_ids\": \"98545\"\n}\n```\n<br/>\n\n## Informations du compte\n\nDe façon complémentaire vous pouvez récupérer votre identifiant de compte via l'url **/account** (sans aucun paramètre). \n\nLes données du TOKEN seront utilisées pour restituer et vérifier votre compte et la souscription au service.\n\nDes informations complémentaires sur votre souscription au service sont aussi restituées.\n\n\n\n## Tiers ('thirdparties')\n\nCette appellation désigne le tiers, le fournisseur, le sous-traitant, etc... en relation avec le compte donneur d'ordres et fait l'objet de l'évaluation continue au titre de sa conformité, suivant la souscription et/ou les option du compte eAttestations.\n\nDans le cadre de cette relation, le compte eAttestations utilisateur de l'API REST/JSON est aussi appelé compte \"donneur d'ordres\".\n\n## Dossiers ('dossiers')\n\nLe dossier est une materialisation de la relation donneur d'ordres / tiers. Un dossier comporte des demandes (exigences de conformité) formulées par le donneur d'ordres auxquelles correspondent des réponses le plus souvent automatiquement apportée par le plateforme eAttestations ou par le tiers (fichiers, signatures, autres données ...).\n\nLa référence d'un dossier est une donnée renseignée par le donneur d'ordres lors de la création d'un dossier ou la modification d'un dossier. La référence d'un dossier doit être unique pour un couple tiers/donneur d'ordres. Autrement dit, un tiers ne peut avoir plus d'un dossier portant la même référence par donneur d'ordres.\n\nCette référence de dossier peut être modifiée à n'importe quel moment sauf s'il a été archivé.\n\n## Exigences ('requirements')\n\nCorrespond à un ensemble d'exigence (légale, compliance, métier, etc...) et une demande du donneur d'ordres. Une exigence fait l'objet d'une **demande** et en attente d'une **réponse** qu'elle soit apportée par eAttestations et pour le tiers lui même tels qu'une donnée spécifique, un ou plusieurs documents et leur(s) fichier(s) lié(s), une signature ou tout autre élément demandé constituant un preuve de conformité dans le cadre du suivi.\n\n# Autres définitions\n\n## Identifiant de compagnie\n\nUn établissement ou une entreprise (au sens personne morale) est indentifiée dans le système eAttestations à l'aide d'un code identifiant national (SIRET, SIREN pour la France) ou d'un numéro internationnal (ex. l'identifiant TVA).\n\nl'API eAttestations propose deux types d'identifiants :\n\nType                         | Description\n-----------------------------|---------------------------------------\nCIT001                       | SIRET : identifiant utilisé en France pour qualifier les établissements. Nombre de 14 chiffres vérifiant l'algorithme de Luhn\nCIT002                       | Numéro TVA : identifiant utilisé par la CEE pour les entreprises soumises à l'impôt sur les sociétés. Plus d'informations sur [Wikipedia](https://en.wikipedia.org/wiki/VAT_identification_number)\n\nDes types d'identifiants nouveaux pourront être implémenté au fil des évolutions de l'API.\n\n### Indicateur de complétude\n\nL'indicateur de complétude eAttestation permet de renseigner de façon simple que le tiers a couvert entièrement les besoins ('requirements') au titre de la conformité exigée par la compliance client.\n\nExemple : un dossier de surveillance d'un tiers est jugé complet pour l'indicateur \"obligation de vigilance\", si tous les documents relatifs à l'obligation de vigilance sont présents et validés.\n\nCode indicateur| Description\n---------------|------------------------\nI001           | Obligation de vigilance\n\n# Création de dossier\n\nLa création de dossier de suivi continu de la conformité des tiers (ou import de dossier) est au coeur du processus et la principale étape permettant de démarrer le processus de suivi.\n\nElle démarre un workflow complexe  :\n\n- la récupération automatique des données du tiers \n- son invitation grâce à l'email de contact\n- le workflow d'envoi d'emails de demande pour les documents demandés et non encore récupérés \n- les rappels \n- des mises à jours programmées\n- la production d'indicateurs complexes\n- etc..\n\nLe endpoint **POST /account/{accountId}/dossiers** permet de créer un dossier pour un tiers (thirdparty).\n\n**Vous trouverez toutes les informations complémentaire sur ce endpoint dans la section <a href=\"#importer-un-dossier\">Importer un dossier</a>.**\n\n\nLe traitement pouvant durer plusieurs minutes la réponse est **asynchrone**, comme illustré dans le schéma ci-dessous.\n\nLors de la création un identifiant de suivi du traitement de l'import (processId) est renvoyé. \nIl vous faudra l'utiliser pour connaître le résultat de l'import de façon asynchrone.\n\nLe endpoint **GET /account/{accountId}/dossier/process/{processId}** permet de suivre le résultat de l'import grâce à l'identifiant du process d'import renvoyé lors de l'appel \"Création d'un dossier\" (POST /account/{accountId}/dossiers).\n\n<p class=\"mermaid\">\ngraph TB\n\tA((<strong>Start</strong>)) \n\tA --> B(Call <strong>Import dossier endpoint</strong><br/>returns processId)\n\tB --processId--> C(Call <strong>Get import result endpoint</strong> for processId)\n\tC --> D{Status}\n\tD --complete=true <br/> <strong>AND</strong> success=<strong>true</strong>--> E\n\tD --complete=true <br/> <strong>AND</strong> success=<strong>false</strong>--> R\n\tD --complete=false--> C\n\tE((<strong>End</strong>))\n\tR(Error Handling)\n</p>\n\n<aside class=\"notice\">\nIl est important de bien vérifier les paramètres d'appel et de bien prendre en compte les codes d'erreurs et leur signification.\n</aside>",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authenticate",
			"item": [
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6778328e-189e-4f8d-b7bf-60437eee0b1d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"token\", jsonData.access_token);",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.not.be.error;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{keycloak-url}}/auth/realms/{{realm}}/protocol/openid-connect/token",
							"host": [
								"{{keycloak-url}}"
							],
							"path": [
								"auth",
								"realms",
								"{{realm}}",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "## Authenticate to the API\n\n### Get a JWT from the authenticator server\n\nThis request consist of a POST request with user/password, and client identifier 'ea-api-edge' to the authentication server.\n\nCredential a verified by the server which send back a JWT (JSON Wen Token) that user have to keep in ordre to use it for all subsequent requests to the API.\n\nThe token has a limited time which can be verified with 'expires_in' expressed in seconds."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "v1",
			"item": [
				{
					"name": "v1.1",
					"item": [
						{
							"name": "Account",
							"item": [
								{
									"name": "Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6d8fbb0-e2d9-44c5-a6e6-4287f302b5e2",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"account_id\", jsonData.content[0].id);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "da79b5f5-bcaa-48ef-8a39-6b20dfdf5b1e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account"
											]
										},
										"description": "GET a request for the default account"
									},
									"response": []
								},
								{
									"name": "Account statistics",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}"
											]
										},
										"description": "GET account statistics"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Dossiers",
							"item": [
								{
									"name": "Documents",
									"item": [
										{
											"name": "Account dossiers documents",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"for (let i=0; i<jsonData.content.length; i++) {",
															"    if (jsonData.content[i].listFileInformation.length > 0) {",
															"        pm.globals.set(\"documentId\", jsonData.content[i].documentId);",
															"        pm.globals.set(\"fileId\", jsonData.content[i].listFileInformation[0].fileId);",
															"        break;",
															"    }",
															"}",
															"",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents"
													]
												},
												"description": "GET dossier documents by its id"
											},
											"response": []
										},
										{
											"name": "Account dossiers documents details",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.globals.set(\"fileId\", jsonData.content[0].listFileInformation[0].fileId);",
															"",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents/{{documentId}}",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents",
														"{{documentId}}"
													]
												},
												"description": "GET one dossier's document details by its id"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Files",
									"item": [
										{
											"name": "Account dossiers documents files",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.globals.set(\"fileId\", jsonData.content[0].listFileInformation[0].fileId);",
															"",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents/{{documentId}}/files",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents",
														"{{documentId}}",
														"files"
													]
												},
												"description": "GET one dossier's document related files by its id"
											},
											"response": []
										},
										{
											"name": "Account file download",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents/{{documentId}}/files/{{fileId}}",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents",
														"{{documentId}}",
														"files",
														"{{fileId}}"
													]
												},
												"description": "GET one file content from the given dossierId, documentId and fileId"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "_Importing",
									"item": [
										{
											"name": "Import/create new dossier",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cc531f55-730e-46e2-986c-e78e8c595e00",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"processId\", jsonData.content.processId);",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyIdType\": \"CIT002\",\n  \"companyIdValue\": \"FR69503829368\",\n  \"thirdpartyCode\": \"\",\n  \"dossierReference\": \"DOSSIER_REST_TVA#1\",\n  \"description\": \"Dossier avec TVA\",\n  \"purchasingCategory\": \"\",\n  \"expirationDate\": \"2020-05-31\",\n  \"requiredDocuments\": [ \"JUSTIF_IMM\" ],\n  \"thirdpartyEmail\": [\"v.dagoury@e-attestations.com\"],\n  \"userInCharge\": [\n    \"v.dagoury@e-attestations.com\"\n  ]\n}"
												},
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers"
													]
												},
												"description": "Import/create a new dossier given the given body"
											},
											"response": []
										},
										{
											"name": "Import dossier - Get Processes",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8111e66d-8a32-45bc-a8a4-a4e527e7f762",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/processes",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"processes"
													]
												},
												"description": "Get dossiers' import/create processes ids"
											},
											"response": []
										},
										{
											"name": "Import dossier - Get Processes from one date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8111e66d-8a32-45bc-a8a4-a4e527e7f762",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/processes?fromDate=2019-01-01",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"processes"
													],
													"query": [
														{
															"key": "fromDate",
															"value": "2019-01-01"
														}
													]
												},
												"description": "Get dossiers' import/create results for a given date"
											},
											"response": []
										},
										{
											"name": "Import dossier - Get Processes by processId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa5b6827-8cbb-4a2f-9148-aa7fdf7521b1",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "858e3e48-9a2c-4261-9ea6-3ff22e7fdcce",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/process/{{processId}}",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"process",
														"{{processId}}"
													]
												},
												"description": "Get dossiers' import/create result for a given id"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account all dossiers (paginated)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"dossierReference\", jsonData.content[0].dossierReference);",
													"pm.globals.set(\"companyIdType\", jsonData.content[0].companyIdType);",
													"pm.globals.set(\"companyIdValue\", jsonData.content[0].companyIdValue);",
													"pm.globals.set(\"dossierId\", jsonData.content[0].dossierId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											]
										},
										"description": "GET paginated dossier list"
									},
									"response": []
								},
								{
									"name": "Account all dossiers ALL",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"dossierReference\", jsonData.content[0].dossierReference);",
													"pm.globals.set(\"companyIdType\", jsonData.content[0].companyIdType);",
													"pm.globals.set(\"companyIdValue\", jsonData.content[0].companyIdValue);",
													"pm.globals.set(\"dossierId\", jsonData.content[0].dossierId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/all",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"all"
											]
										},
										"description": "GET all dossier at once (not paginated)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by SIRET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?siret=43258335900109",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "siret",
													"value": "43258335900109"
												}
											]
										},
										"description": "GET dossier for a given SIRET (companyIdType & companyIdValue)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by CIT001",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?companyIdValue={{companyIdValue}}&companyIdType={{companyIdType}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "companyIdValue",
													"value": "{{companyIdValue}}"
												},
												{
													"key": "companyIdType",
													"value": "{{companyIdType}}"
												}
											]
										},
										"description": "GET dossier for a given SIRET (companyIdType & companyIdValue)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by CIT002",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?companyIdValue={{companyIdValue}}&companyIdType={{companyIdType}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "companyIdValue",
													"value": "{{companyIdValue}}"
												},
												{
													"key": "companyIdType",
													"value": "{{companyIdType}}"
												}
											]
										},
										"description": "GET dossier for a given SIRET (companyIdType & companyIdValue)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by SIREN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?siren=432583359",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "siren",
													"value": "432583359"
												}
											]
										},
										"description": "GET dossier for a given SIREN (for French thirdparties)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by Reference",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?dossierReference=001&op=ends",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "dossierReference",
													"value": "001"
												},
												{
													"key": "op",
													"value": "ends"
												}
											]
										},
										"description": "GET dossier for a given SIREN (for French thirdparties)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by ThirdParty Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?thirdpartyCode=100970",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "thirdpartyCode",
													"value": "100970"
												}
											]
										},
										"description": "GET dossier for a given thirdPartyCode"
									},
									"response": []
								},
								{
									"name": "Account dossiers details",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}"
											]
										},
										"description": "GET dossier details by its id"
									},
									"response": []
								},
								{
									"name": "Activate one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e7d4252-35da-4e83-ba23-d4681ec364f8",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													"",
													"// getting answer from response json",
													"console.log(\"test\")",
													"console.log(pm.response.json());",
													"var dossierResponse = pm.response.json().content;",
													"pm.test(\"Verify the contents of the response payload are correct with dossierId and accountId\", function () { ",
													"    pm.expect(dossierResponse.complete).to.eql(true);",
													"     if(dossierResponse.success===false){",
													"        console.log(\"The folder is already activated\")",
													"    }",
													"    else",
													"        if(dossierResponse.success===true){",
													"        console.log(\"You have activated the folder\")",
													"        }",
													"",
													"    ",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"expirationDate\": \"2020-01-30\"\n}"
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/reactivate",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"reactivate"
											]
										},
										"description": "(Re)Activate one dossier"
									},
									"response": []
								},
								{
									"name": "De-Activate one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e0acf62-d689-4404-a7f3-9e886c247515",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/stop",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"stop"
											]
										},
										"description": "(De)Activate one dossier"
									},
									"response": []
								},
								{
									"name": "Update requirements of one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "abd8f5f1-6f25-4463-8f0f-a1c0df6fa22b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"newRequiredDocuments\":[\"JUSTIF_IMM\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/requirements",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"requirements"
											]
										},
										"description": "Update requirements of one dossier"
									},
									"response": []
								},
								{
									"name": "Update details of one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f30a53a-8e7e-4920-84f5-2936d6457a03",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"dossierReference\": \"EC7BJC6030/5920015318\",\n \"description\": \"NEW DESCRIPTION 1\",\n \"purchasingCategory\": \"NEW PURCHASSING CATEGORY 1\",\n \"expirationDate\": \"2021-03-15\",\n \"thirdpartyCode\": \"2133\",\n \"thirdpartyEmail\": [\"v.dagoury@e-attestations.com\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Thirdparties",
							"item": [
								{
									"name": "Account thirdparties",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											]
										},
										"description": "GET (paginated) thirdparties"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by SIREN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?siren=503829368",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "siren",
													"value": "503829368"
												}
											]
										},
										"description": "GET thirdparties by SIREN (for french entities)"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by SIRET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?siret=50382936800045",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "siret",
													"value": "50382936800045"
												}
											]
										},
										"description": "GET thirdparties by SIRET (for french entities)"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by TVA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?tva=FR87432583359",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "tva",
													"value": "FR87432583359"
												}
											]
										},
										"description": "GET thirdparties by TVA number (for EU entities)"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?name=TUC",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "name",
													"value": "TUC"
												}
											]
										},
										"description": "GET thirdparties by name"
									},
									"response": []
								},
								{
									"name": "Account thirdparties details",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties/{{thirdpartyId}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties",
												"{{thirdpartyId}}"
											]
										},
										"description": "GET thirdparty details by its id"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Requirements",
							"item": [
								{
									"name": "Requirements of one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4eb7b8a3-7642-4326-9941-c1323cd2b4b9",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													"",
													"// getting Requirements from response json",
													"var codes = pm.response.json().content.map(req => req[\"code\"]);",
													"console.log(codes);",
													"pm.test(\"Verify the contents of the response contains some requirements\", function () { ",
													"    pm.expect(codes).to.include(\"ATT_VIGI\");",
													"    pm.expect(codes).to.include(\"JUSTIF_IMM\");",
													"    pm.expect(codes).to.include(\"LST_SAL_ETR\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/requirements",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"requirements"
											]
										},
										"description": "GET one dossier's requierements"
									},
									"response": []
								},
								{
									"name": "Requirements for the account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4eb7b8a3-7642-4326-9941-c1323cd2b4b9",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													"",
													"// getting Requirements from response json",
													"var codes = pm.response.json().content.map(req => req[\"code\"]);",
													"console.log(codes);",
													"pm.test(\"Verify the contents of the response contains some requirements\", function () { ",
													"    pm.expect(codes).to.include(\"ATT_VIGI\");",
													"    pm.expect(codes).to.include(\"JUSTIF_IMM\");",
													"    pm.expect(codes).to.include(\"LST_SAL_ETR\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/requirements",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"requirements"
											]
										},
										"description": "GET account's requierements"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"description": "## API REST 1.1\n\nFirst iteration of e-Attestations RESTFUL API\n\n### Features\n\n- Presenting resources by account :\n\t* account details and subscription\n\t* thirdparties search, list and details\n\t* dossiers\n\t\t- search list and details\t\n\t\t- dossiers per thirddparties\n\t\t- documents per dossiers\n\t\t- files per document, download one file\n\t\t- requirements\n\t* account requirements\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c05a92e4-df18-44c2-85e6-d5ee363e5f69",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "798ab297-3745-4c7b-aeca-7fffa7f01cd5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "v1.2a",
					"item": [
						{
							"name": "Account",
							"item": [
								{
									"name": "Account(s)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6d8fbb0-e2d9-44c5-a6e6-4287f302b5e2",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"account_id\", jsonData.content[0].id);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "da79b5f5-bcaa-48ef-8a39-6b20dfdf5b1e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account"
											]
										},
										"description": "GET a request for the default account"
									},
									"response": []
								},
								{
									"name": "Account statistics",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}"
											]
										},
										"description": "GET account statistics"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Dossiers",
							"item": [
								{
									"name": "Documents",
									"item": [
										{
											"name": "Account dossiers documents",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"for (let i=0; i<jsonData.content.length; i++) {",
															"    if (jsonData.content[i].listFileInformation.length > 0) {",
															"        pm.globals.set(\"documentId\", jsonData.content[i].documentId);",
															"        pm.globals.set(\"fileId\", jsonData.content[i].listFileInformation[0].fileId);",
															"        break;",
															"    }",
															"}",
															"",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents"
													]
												},
												"description": "GET dossier documents by its id"
											},
											"response": []
										},
										{
											"name": "Account dossiers documents details",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.globals.set(\"fileId\", jsonData.content[0].listFileInformation[0].fileId);",
															"",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents/{{documentId}}",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents",
														"{{documentId}}"
													]
												},
												"description": "GET one dossier's document details by its id"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Files",
									"item": [
										{
											"name": "Account dossiers documents files",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.globals.set(\"fileId\", jsonData.content[0].listFileInformation[0].fileId);",
															"",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents/{{documentId}}/files",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents",
														"{{documentId}}",
														"files"
													]
												},
												"description": "GET one dossier's document related files by its id"
											},
											"response": []
										},
										{
											"name": "Account file download",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/documents/{{documentId}}/files/{{fileId}}",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"{{dossierId}}",
														"documents",
														"{{documentId}}",
														"files",
														"{{fileId}}"
													]
												},
												"description": "GET one file content from the given dossierId, documentId and fileId"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "_Importing",
									"item": [
										{
											"name": "Import/create new dossier",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cc531f55-730e-46e2-986c-e78e8c595e00",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"processId\", jsonData.content.processId);",
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyIdType\": \"CIT002\",\n  \"companyIdValue\": \"FR69503829368\",\n  \"thirdpartyCode\": \"\",\n  \"dossierReference\": \"DOSSIER_REST_TVA#1\",\n  \"description\": \"Dossier avec TVA\",\n  \"purchasingCategory\": \"\",\n  \"expirationDate\": \"2020-05-31\",\n  \"requiredDocuments\": [ \"JUSTIF_IMM\" ],\n  \"thirdpartyEmail\": [\"v.dagoury@e-attestations.com\"],\n  \"userInCharge\": [\n    \"v.dagoury@e-attestations.com\"\n  ]\n}"
												},
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers"
													]
												},
												"description": "Import/create a new dossier given the given body"
											},
											"response": []
										},
										{
											"name": "Import dossier - Get Processes",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8111e66d-8a32-45bc-a8a4-a4e527e7f762",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/processes",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"processes"
													]
												},
												"description": "Get dossiers' import/create processes ids"
											},
											"response": []
										},
										{
											"name": "Import dossier - Get Processes from one date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8111e66d-8a32-45bc-a8a4-a4e527e7f762",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/processes?fromDate=2019-01-01",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"processes"
													],
													"query": [
														{
															"key": "fromDate",
															"value": "2019-01-01"
														}
													]
												},
												"description": "Get dossiers' import/create results for a given date"
											},
											"response": []
										},
										{
											"name": "Import dossier - Get Processes by processId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa5b6827-8cbb-4a2f-9148-aa7fdf7521b1",
														"exec": [
															"pm.test(\"Verify if response is HTTP 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "858e3e48-9a2c-4261-9ea6-3ff22e7fdcce",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/process/{{processId}}",
													"host": [
														"{{ea_api_edge}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"{{account_id}}",
														"dossiers",
														"process",
														"{{processId}}"
													]
												},
												"description": "Get dossiers' import/create result for a given id"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account all dossiers (paginated)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"dossierReference\", jsonData.content[0].dossierReference);",
													"pm.globals.set(\"companyIdType\", jsonData.content[0].companyIdType);",
													"pm.globals.set(\"companyIdValue\", jsonData.content[0].companyIdValue);",
													"pm.globals.set(\"dossierId\", jsonData.content[0].dossierId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											]
										},
										"description": "GET paginated dossier list"
									},
									"response": []
								},
								{
									"name": "Account all dossiers ALL",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"dossierReference\", jsonData.content[0].dossierReference);",
													"pm.globals.set(\"companyIdType\", jsonData.content[0].companyIdType);",
													"pm.globals.set(\"companyIdValue\", jsonData.content[0].companyIdValue);",
													"pm.globals.set(\"dossierId\", jsonData.content[0].dossierId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/all",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"all"
											]
										},
										"description": "GET all dossier at once (not paginated)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers with 'like' operator",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?dossierReference=A&op=like",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "dossierReference",
													"value": "A"
												},
												{
													"key": "op",
													"value": "like"
												}
											]
										},
										"description": "GET dossier for a given dossierReference"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by SIRET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?siret=43258335900109",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "siret",
													"value": "43258335900109"
												}
											]
										},
										"description": "GET dossier for a given SIRET (companyIdType & companyIdValue)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by CIT001",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?companyIdValue={{companyIdValue}}&companyIdType={{companyIdType}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "companyIdValue",
													"value": "{{companyIdValue}}"
												},
												{
													"key": "companyIdType",
													"value": "{{companyIdType}}"
												}
											]
										},
										"description": "GET dossier for a given SIRET (companyIdType & companyIdValue)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by CIT002",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?companyIdValue={{companyIdValue}}&companyIdType={{companyIdType}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "companyIdValue",
													"value": "{{companyIdValue}}"
												},
												{
													"key": "companyIdType",
													"value": "{{companyIdType}}"
												}
											]
										},
										"description": "GET dossier for a given SIRET (companyIdType & companyIdValue)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by SIREN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?siren=432583359",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "siren",
													"value": "432583359"
												}
											]
										},
										"description": "GET dossier for a given SIREN (for French thirdparties)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by Reference",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?siren=503829368",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "siren",
													"value": "503829368"
												}
											]
										},
										"description": "GET dossier for a given SIREN (for French thirdparties)"
									},
									"response": []
								},
								{
									"name": "Account all dossiers by ThirdParty Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers?thirdpartyCode=100970",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers"
											],
											"query": [
												{
													"key": "thirdpartyCode",
													"value": "100970"
												}
											]
										},
										"description": "GET dossier for a given thirdPartyCode"
									},
									"response": []
								},
								{
									"name": "Account dossiers details",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}"
											]
										},
										"description": "GET dossier details by its id"
									},
									"response": []
								},
								{
									"name": "Activate one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e7d4252-35da-4e83-ba23-d4681ec364f8",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													"",
													"// getting answer from response json",
													"console.log(\"test\")",
													"console.log(pm.response.json());",
													"var dossierResponse = pm.response.json().content;",
													"pm.test(\"Verify the contents of the response payload are correct with dossierId and accountId\", function () { ",
													"    pm.expect(dossierResponse.complete).to.eql(true);",
													"     if(dossierResponse.success===false){",
													"        console.log(\"The folder is already activated\")",
													"    }",
													"    else",
													"        if(dossierResponse.success===true){",
													"        console.log(\"You have activated the folder\")",
													"        }",
													"",
													"    ",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"expirationDate\": \"2020-01-30\"\n}"
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/reactivate",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"reactivate"
											]
										},
										"description": "(Re)Activate one dossier"
									},
									"response": []
								},
								{
									"name": "De-Activate one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e0acf62-d689-4404-a7f3-9e886c247515",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/stop",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"stop"
											]
										},
										"description": "(De)Activate one dossier"
									},
									"response": []
								},
								{
									"name": "Update requirements of one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "abd8f5f1-6f25-4463-8f0f-a1c0df6fa22b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"newRequiredDocuments\":[\"JUSTIF_IMM\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/requirements",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"requirements"
											]
										},
										"description": "Update requirements of one dossier"
									},
									"response": []
								},
								{
									"name": "Update details of one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f30a53a-8e7e-4920-84f5-2936d6457a03",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"dossierReference\": \"EC7BJC6030/5920015318\",\n \"description\": \"NEW DESCRIPTION 1\",\n \"purchasingCategory\": \"NEW PURCHASSING CATEGORY 1\",\n \"expirationDate\": \"2021-03-15\",\n \"thirdpartyCode\": \"2133\",\n \"thirdpartyEmail\": [\"v.dagoury@e-attestations.com\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Thirdparties",
							"item": [
								{
									"name": "Account thirdparties",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											]
										},
										"description": "GET (paginated) thirdparties"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by SIREN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?siren=503829368",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "siren",
													"value": "503829368"
												}
											]
										},
										"description": "GET thirdparties by SIREN (for french entities)"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by SIRET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?siret=50382936800045",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "siret",
													"value": "50382936800045"
												}
											]
										},
										"description": "GET thirdparties by SIRET (for french entities)"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by TVA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?tva=FR87432583359",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "tva",
													"value": "FR87432583359"
												}
											]
										},
										"description": "GET thirdparties by TVA number (for EU entities)"
									},
									"response": []
								},
								{
									"name": "Account thirdparties search by Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties?name=TUC",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties"
											],
											"query": [
												{
													"key": "name",
													"value": "TUC"
												}
											]
										},
										"description": "GET thirdparties by name"
									},
									"response": []
								},
								{
									"name": "Account thirdparties details",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties/{{thirdpartyId}}",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties",
												"{{thirdpartyId}}"
											]
										},
										"description": "GET thirdparty details by its id"
									},
									"response": []
								},
								{
									"name": "Account advanced search thirdparties",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ed6f16f-800b-4881-817e-0684a6ed794b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"thirdpartyId\", jsonData.content[0].thirdpartyId);",
													"",
													"pm.test(\"Verify if response is HTTP 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/thirdparties/q?search=monitored!null",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"thirdparties",
												"q"
											],
											"query": [
												{
													"key": "search",
													"value": "monitored!null"
												}
											]
										},
										"description": "GET thirdparties by name"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Requirements",
							"item": [
								{
									"name": "Requirements of one dossier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4eb7b8a3-7642-4326-9941-c1323cd2b4b9",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													"",
													"// getting Requirements from response json",
													"var codes = pm.response.json().content.map(req => req[\"code\"]);",
													"console.log(codes);",
													"pm.test(\"Verify the contents of the response contains some requirements\", function () { ",
													"    pm.expect(codes).to.include(\"ATT_VIGI\");",
													"    pm.expect(codes).to.include(\"JUSTIF_IMM\");",
													"    pm.expect(codes).to.include(\"LST_SAL_ETR\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/dossiers/{{dossierId}}/requirements",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"dossiers",
												"{{dossierId}}",
												"requirements"
											]
										},
										"description": "GET one dossier's requierements"
									},
									"response": []
								},
								{
									"name": "Requirements for the account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4eb7b8a3-7642-4326-9941-c1323cd2b4b9",
												"exec": [
													"// print environment",
													"console.log(pm.globals.get(\"env\"));",
													"",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.not.be.error;",
													"});",
													"",
													"// getting Requirements from response json",
													"var codes = pm.response.json().content.map(req => req[\"code\"]);",
													"console.log(codes);",
													"pm.test(\"Verify the contents of the response contains some requirements\", function () { ",
													"    pm.expect(codes).to.include(\"ATT_VIGI\");",
													"    pm.expect(codes).to.include(\"JUSTIF_IMM\");",
													"    pm.expect(codes).to.include(\"LST_SAL_ETR\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ea_api_edge}}/api/v1/account/{{account_id}}/requirements",
											"host": [
												"{{ea_api_edge}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"{{account_id}}",
												"requirements"
											]
										},
										"description": "GET account's requierements"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"description": "## API REST 1.2a\n\n### Features\n\n#### Possible breaking changes \n\n- Change all Booleans data to String for dossiers and thirdparties. This change gives the capacity for better search patterns.\n    - Document:\n        - present\n    - Dossier :\n        - state\n    - Indicator :\n        - state\n    - Thirdparty :\n        - monitored\n        - outOfBusiness\n        - subscriptionState\n        - thirdpartyGlobalState\n    - Import Result:\n        - complete\n        - success\n\n#### Features\n\n- Search for querying dossiers on reference with an operator \"starts\", \"ends\" or \"like\"\n- Advanced search for querying thirdparties using operators (:, !, ~, >, <) on any attributes\n- Accept OPTIONS and CORS\n- Adding addressCity, addressPostCode (ISO3 format) and addressCountryCode to the thirdparty list\n- Single documentation with Redoc and OpenAPI v3.0\n- Error messages : add request and reason attributes\n- Documentation update\n- Fixing bugs:\n    * Account access enforcement\n    * Send back 404 if a resource is not found in all cases\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aaf068f6-dfd4-4d7a-9d13-026c7ab2fcc5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ce125160-c1bb-4833-81d2-1fb7fe5990e7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "06fd9b99-7e98-469b-bb3b-f0b3f5c89532",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "25fac71d-5154-4baf-a8a4-e7c7bec017a6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e5fae39c-6a97-4e32-8916-cf38613e2553",
			"key": "client",
			"value": "ea-api-edge",
			"type": "string"
		},
		{
			"id": "f0414f75-6bfa-4655-9fc7-ef5dcd7604df",
			"key": "realm",
			"value": "eat_realm",
			"type": "string"
		}
	]
}